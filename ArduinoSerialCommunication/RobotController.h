//////////////////////////////////////////////////////Define header/////////////////////////////////////////////////////
#ifndef ARDUINOCONTROL_H
#define ARDUINOCONTROL_H
/////////////////////////////////////////////////////////Macros/////////////////////////////////////////////////////////
#define MAX_DATA_LENGTH 255
#define SOFT_RESET_TIME 12000
////////////////////////////////////////////////////Include libraries///////////////////////////////////////////////////
#include <ctime>
/////////////////////////////////////////////////////Include headers////////////////////////////////////////////////////
#include "SerialPort.h"
#include "RobotData.h"
////////////////////////////////////////////////////Class declaration///////////////////////////////////////////////////
class RobotController
{
private:
    RobotData robotData;
    char output[MAX_DATA_LENGTH];
public:
    RobotController() { }
    ~RobotController() { }
    // Actual robot controller
    // Send specific char to Arduino for specific action
    void sendKey(SerialPort &arduino, std::string string);
    // Different actions
    void softReset(SerialPort &arduino);
    void unPressAllButtons(SerialPort &arduino);
    void pressBtn_A(SerialPort &arduino);
    void bottomScreenLDR(SerialPort &arduino);
    void takeLDRReading(SerialPort &arduino);
    // Protect class
    char* PortName();
    long TimeCurrent();
    void increaseTimeCurrent(long term);
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif // ARDUINOCONTROL_H
///////////////////////////////////////////////////////////END//////////////////////////////////////////////////////////